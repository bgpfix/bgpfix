// Code generated by "enumer -type AddPathDir -trimprefix ADDPATH_"; DO NOT EDIT.

package caps

import (
	"fmt"
	"strings"
)

const _AddPathDirName = "RECEIVESENDBIDIR"

var _AddPathDirIndex = [...]uint8{0, 7, 11, 16}

const _AddPathDirLowerName = "receivesendbidir"

func (i AddPathDir) String() string {
	i -= 1
	if i >= AddPathDir(len(_AddPathDirIndex)-1) {
		return fmt.Sprintf("AddPathDir(%d)", i+1)
	}
	return _AddPathDirName[_AddPathDirIndex[i]:_AddPathDirIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _AddPathDirNoOp() {
	var x [1]struct{}
	_ = x[ADDPATH_RECEIVE-(1)]
	_ = x[ADDPATH_SEND-(2)]
	_ = x[ADDPATH_BIDIR-(3)]
}

var _AddPathDirValues = []AddPathDir{ADDPATH_RECEIVE, ADDPATH_SEND, ADDPATH_BIDIR}

var _AddPathDirNameToValueMap = map[string]AddPathDir{
	_AddPathDirName[0:7]:        ADDPATH_RECEIVE,
	_AddPathDirLowerName[0:7]:   ADDPATH_RECEIVE,
	_AddPathDirName[7:11]:       ADDPATH_SEND,
	_AddPathDirLowerName[7:11]:  ADDPATH_SEND,
	_AddPathDirName[11:16]:      ADDPATH_BIDIR,
	_AddPathDirLowerName[11:16]: ADDPATH_BIDIR,
}

var _AddPathDirNames = []string{
	_AddPathDirName[0:7],
	_AddPathDirName[7:11],
	_AddPathDirName[11:16],
}

// AddPathDirString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func AddPathDirString(s string) (AddPathDir, error) {
	if val, ok := _AddPathDirNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _AddPathDirNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to AddPathDir values", s)
}

// AddPathDirValues returns all values of the enum
func AddPathDirValues() []AddPathDir {
	return _AddPathDirValues
}

// AddPathDirStrings returns a slice of all String values of the enum
func AddPathDirStrings() []string {
	strs := make([]string, len(_AddPathDirNames))
	copy(strs, _AddPathDirNames)
	return strs
}

// IsAAddPathDir returns "true" if the value is listed in the enum definition. "false" otherwise
func (i AddPathDir) IsAAddPathDir() bool {
	for _, v := range _AddPathDirValues {
		if i == v {
			return true
		}
	}
	return false
}
