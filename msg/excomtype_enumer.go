// Code generated by "enumer -type ExcomType -trimprefix EXCOM_"; DO NOT EDIT.

package msg

import (
	"fmt"
	"strings"
)

const _ExcomTypeName = "AS2TARGETORIGINSUBTYPEIP4IP4_TARGETIP4_ORIGINAS4AS4_TARGETAS4_ORIGINFLOW_REDIRECT_NHTRANSITIVEFLOW_RATE_BYTESFLOW_ACTIONFLOW_REDIRECT_AS2FLOW_DSCPFLOW_RATE_PACKETSFLOW_REDIRECT_IP4FLOW_REDIRECT_AS4TYPE"
const _ExcomTypeLowerName = "as2targetoriginsubtypeip4ip4_targetip4_originas4as4_targetas4_originflow_redirect_nhtransitiveflow_rate_bytesflow_actionflow_redirect_as2flow_dscpflow_rate_packetsflow_redirect_ip4flow_redirect_as4type"

var _ExcomTypeMap = map[ExcomType]string{
	0:     _ExcomTypeName[0:3],
	2:     _ExcomTypeName[3:9],
	3:     _ExcomTypeName[9:15],
	255:   _ExcomTypeName[15:22],
	256:   _ExcomTypeName[22:25],
	258:   _ExcomTypeName[25:35],
	259:   _ExcomTypeName[35:45],
	512:   _ExcomTypeName[45:48],
	514:   _ExcomTypeName[48:58],
	515:   _ExcomTypeName[58:68],
	2048:  _ExcomTypeName[68:84],
	16384: _ExcomTypeName[84:94],
	32774: _ExcomTypeName[94:109],
	32775: _ExcomTypeName[109:120],
	32776: _ExcomTypeName[120:137],
	32777: _ExcomTypeName[137:146],
	32780: _ExcomTypeName[146:163],
	33032: _ExcomTypeName[163:180],
	33288: _ExcomTypeName[180:197],
	48896: _ExcomTypeName[197:201],
}

func (i ExcomType) String() string {
	if str, ok := _ExcomTypeMap[i]; ok {
		return str
	}
	return fmt.Sprintf("ExcomType(%d)", i)
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _ExcomTypeNoOp() {
	var x [1]struct{}
	_ = x[EXCOM_AS2-(0)]
	_ = x[EXCOM_TARGET-(2)]
	_ = x[EXCOM_ORIGIN-(3)]
	_ = x[EXCOM_SUBTYPE-(255)]
	_ = x[EXCOM_IP4-(256)]
	_ = x[EXCOM_IP4_TARGET-(258)]
	_ = x[EXCOM_IP4_ORIGIN-(259)]
	_ = x[EXCOM_AS4-(512)]
	_ = x[EXCOM_AS4_TARGET-(514)]
	_ = x[EXCOM_AS4_ORIGIN-(515)]
	_ = x[EXCOM_FLOW_REDIRECT_NH-(2048)]
	_ = x[EXCOM_TRANSITIVE-(16384)]
	_ = x[EXCOM_FLOW_RATE_BYTES-(32774)]
	_ = x[EXCOM_FLOW_ACTION-(32775)]
	_ = x[EXCOM_FLOW_REDIRECT_AS2-(32776)]
	_ = x[EXCOM_FLOW_DSCP-(32777)]
	_ = x[EXCOM_FLOW_RATE_PACKETS-(32780)]
	_ = x[EXCOM_FLOW_REDIRECT_IP4-(33032)]
	_ = x[EXCOM_FLOW_REDIRECT_AS4-(33288)]
	_ = x[EXCOM_TYPE-(48896)]
}

var _ExcomTypeValues = []ExcomType{EXCOM_AS2, EXCOM_TARGET, EXCOM_ORIGIN, EXCOM_SUBTYPE, EXCOM_IP4, EXCOM_IP4_TARGET, EXCOM_IP4_ORIGIN, EXCOM_AS4, EXCOM_AS4_TARGET, EXCOM_AS4_ORIGIN, EXCOM_FLOW_REDIRECT_NH, EXCOM_TRANSITIVE, EXCOM_FLOW_RATE_BYTES, EXCOM_FLOW_ACTION, EXCOM_FLOW_REDIRECT_AS2, EXCOM_FLOW_DSCP, EXCOM_FLOW_RATE_PACKETS, EXCOM_FLOW_REDIRECT_IP4, EXCOM_FLOW_REDIRECT_AS4, EXCOM_TYPE}

var _ExcomTypeNameToValueMap = map[string]ExcomType{
	_ExcomTypeName[0:3]:          EXCOM_AS2,
	_ExcomTypeLowerName[0:3]:     EXCOM_AS2,
	_ExcomTypeName[3:9]:          EXCOM_TARGET,
	_ExcomTypeLowerName[3:9]:     EXCOM_TARGET,
	_ExcomTypeName[9:15]:         EXCOM_ORIGIN,
	_ExcomTypeLowerName[9:15]:    EXCOM_ORIGIN,
	_ExcomTypeName[15:22]:        EXCOM_SUBTYPE,
	_ExcomTypeLowerName[15:22]:   EXCOM_SUBTYPE,
	_ExcomTypeName[22:25]:        EXCOM_IP4,
	_ExcomTypeLowerName[22:25]:   EXCOM_IP4,
	_ExcomTypeName[25:35]:        EXCOM_IP4_TARGET,
	_ExcomTypeLowerName[25:35]:   EXCOM_IP4_TARGET,
	_ExcomTypeName[35:45]:        EXCOM_IP4_ORIGIN,
	_ExcomTypeLowerName[35:45]:   EXCOM_IP4_ORIGIN,
	_ExcomTypeName[45:48]:        EXCOM_AS4,
	_ExcomTypeLowerName[45:48]:   EXCOM_AS4,
	_ExcomTypeName[48:58]:        EXCOM_AS4_TARGET,
	_ExcomTypeLowerName[48:58]:   EXCOM_AS4_TARGET,
	_ExcomTypeName[58:68]:        EXCOM_AS4_ORIGIN,
	_ExcomTypeLowerName[58:68]:   EXCOM_AS4_ORIGIN,
	_ExcomTypeName[68:84]:        EXCOM_FLOW_REDIRECT_NH,
	_ExcomTypeLowerName[68:84]:   EXCOM_FLOW_REDIRECT_NH,
	_ExcomTypeName[84:94]:        EXCOM_TRANSITIVE,
	_ExcomTypeLowerName[84:94]:   EXCOM_TRANSITIVE,
	_ExcomTypeName[94:109]:       EXCOM_FLOW_RATE_BYTES,
	_ExcomTypeLowerName[94:109]:  EXCOM_FLOW_RATE_BYTES,
	_ExcomTypeName[109:120]:      EXCOM_FLOW_ACTION,
	_ExcomTypeLowerName[109:120]: EXCOM_FLOW_ACTION,
	_ExcomTypeName[120:137]:      EXCOM_FLOW_REDIRECT_AS2,
	_ExcomTypeLowerName[120:137]: EXCOM_FLOW_REDIRECT_AS2,
	_ExcomTypeName[137:146]:      EXCOM_FLOW_DSCP,
	_ExcomTypeLowerName[137:146]: EXCOM_FLOW_DSCP,
	_ExcomTypeName[146:163]:      EXCOM_FLOW_RATE_PACKETS,
	_ExcomTypeLowerName[146:163]: EXCOM_FLOW_RATE_PACKETS,
	_ExcomTypeName[163:180]:      EXCOM_FLOW_REDIRECT_IP4,
	_ExcomTypeLowerName[163:180]: EXCOM_FLOW_REDIRECT_IP4,
	_ExcomTypeName[180:197]:      EXCOM_FLOW_REDIRECT_AS4,
	_ExcomTypeLowerName[180:197]: EXCOM_FLOW_REDIRECT_AS4,
	_ExcomTypeName[197:201]:      EXCOM_TYPE,
	_ExcomTypeLowerName[197:201]: EXCOM_TYPE,
}

var _ExcomTypeNames = []string{
	_ExcomTypeName[0:3],
	_ExcomTypeName[3:9],
	_ExcomTypeName[9:15],
	_ExcomTypeName[15:22],
	_ExcomTypeName[22:25],
	_ExcomTypeName[25:35],
	_ExcomTypeName[35:45],
	_ExcomTypeName[45:48],
	_ExcomTypeName[48:58],
	_ExcomTypeName[58:68],
	_ExcomTypeName[68:84],
	_ExcomTypeName[84:94],
	_ExcomTypeName[94:109],
	_ExcomTypeName[109:120],
	_ExcomTypeName[120:137],
	_ExcomTypeName[137:146],
	_ExcomTypeName[146:163],
	_ExcomTypeName[163:180],
	_ExcomTypeName[180:197],
	_ExcomTypeName[197:201],
}

// ExcomTypeString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func ExcomTypeString(s string) (ExcomType, error) {
	if val, ok := _ExcomTypeNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _ExcomTypeNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to ExcomType values", s)
}

// ExcomTypeValues returns all values of the enum
func ExcomTypeValues() []ExcomType {
	return _ExcomTypeValues
}

// ExcomTypeStrings returns a slice of all String values of the enum
func ExcomTypeStrings() []string {
	strs := make([]string, len(_ExcomTypeNames))
	copy(strs, _ExcomTypeNames)
	return strs
}

// IsAExcomType returns "true" if the value is listed in the enum definition. "false" otherwise
func (i ExcomType) IsAExcomType() bool {
	_, ok := _ExcomTypeMap[i]
	return ok
}
